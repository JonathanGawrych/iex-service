// Simple endpoint without other path parts or query parameters
import { PREFIX } from 'config';
// https://iextrading.com/developer/docs/#endpoint
export namespace Endpoint {
	export const path = (symbol:string) => PREFIX + `/stock/{symbol}/endpoint`;

	export interface Response {

		[futureProp: string]: any
	}

	export function get(symbol: string): Promise<Response> {
		return fetch(path(symbol)).then(res => res.json());
	}
}

// Endpoint that includes range path and query parameters
import { PREFIX } from 'config';
import { RangeOption } from './range'

// https://iextrading.com/developer/docs/#endpoint
export namespace Endpoint {
	export const path = (symbol: string, range: RangeOption) => PREFIX + `/stock/{symbol}/endpoint/{range}`;

	export interface Request {}

	export interface Response {

		[futureProp: string]: any
	}

	export function get(symbol: string, range: RangeOption = '', params?: Request): Promise<Response> {
		let url = path(symbol, range);
		if (params != null) {
			// @ts-ignore - see https://github.com/Microsoft/TypeScript/issues/15338
			url += '?' + new URLSearchParams(params);
		}

		return fetch(url).then(res => res.json());
	}
}
